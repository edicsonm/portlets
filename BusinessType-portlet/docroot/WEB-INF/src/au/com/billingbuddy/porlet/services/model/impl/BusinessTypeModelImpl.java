/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package au.com.billingbuddy.porlet.services.model.impl;

import au.com.billingbuddy.porlet.services.model.BusinessType;
import au.com.billingbuddy.porlet.services.model.BusinessTypeModel;
import au.com.billingbuddy.porlet.services.model.BusinessTypeSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the BusinessType service. Represents a row in the &quot;BusinessType&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link au.com.billingbuddy.porlet.services.model.BusinessTypeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BusinessTypeImpl}.
 * </p>
 *
 * @author Edicson Morales
 * @see BusinessTypeImpl
 * @see au.com.billingbuddy.porlet.services.model.BusinessType
 * @see au.com.billingbuddy.porlet.services.model.BusinessTypeModel
 * @generated
 */
@JSON(strict = true)
public class BusinessTypeModelImpl extends BaseModelImpl<BusinessType>
	implements BusinessTypeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a business type model instance should use the {@link au.com.billingbuddy.porlet.services.model.BusinessType} interface instead.
	 */
	public static final String TABLE_NAME = "BusinessType";
	public static final Object[][] TABLE_COLUMNS = {
			{ "Buty_ID", Types.INTEGER },
			{ "Buty_Description", Types.VARCHAR },
			{ "Buty_Status", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table BusinessType (Buty_ID INTEGER not null primary key,Buty_Description VARCHAR(75) null,Buty_Status VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table BusinessType";
	public static final String ORDER_BY_JPQL = " ORDER BY businessType.Buty_Description ASC";
	public static final String ORDER_BY_SQL = " ORDER BY BusinessType.Buty_Description ASC";
	public static final String DATA_SOURCE = "tcsDS";
	public static final String SESSION_FACTORY = "tcsSessionFactory";
	public static final String TX_MANAGER = "tcsTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.au.com.billingbuddy.porlet.services.model.BusinessType"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.au.com.billingbuddy.porlet.services.model.BusinessType"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.au.com.billingbuddy.porlet.services.model.BusinessType"),
			true);
	public static long BUTY_DESCRIPTION_COLUMN_BITMASK = 1L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static BusinessType toModel(BusinessTypeSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		BusinessType model = new BusinessTypeImpl();

		model.setButy_ID(soapModel.getButy_ID());
		model.setButy_Description(soapModel.getButy_Description());
		model.setButy_Status(soapModel.getButy_Status());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<BusinessType> toModels(BusinessTypeSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<BusinessType> models = new ArrayList<BusinessType>(soapModels.length);

		for (BusinessTypeSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.au.com.billingbuddy.porlet.services.model.BusinessType"));

	public BusinessTypeModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _Buty_ID;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setButy_ID(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _Buty_ID;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return BusinessType.class;
	}

	@Override
	public String getModelClassName() {
		return BusinessType.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("Buty_ID", getButy_ID());
		attributes.put("Buty_Description", getButy_Description());
		attributes.put("Buty_Status", getButy_Status());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer Buty_ID = (Integer)attributes.get("Buty_ID");

		if (Buty_ID != null) {
			setButy_ID(Buty_ID);
		}

		String Buty_Description = (String)attributes.get("Buty_Description");

		if (Buty_Description != null) {
			setButy_Description(Buty_Description);
		}

		String Buty_Status = (String)attributes.get("Buty_Status");

		if (Buty_Status != null) {
			setButy_Status(Buty_Status);
		}
	}

	@JSON
	@Override
	public int getButy_ID() {
		return _Buty_ID;
	}

	@Override
	public void setButy_ID(int Buty_ID) {
		_Buty_ID = Buty_ID;
	}

	@JSON
	@Override
	public String getButy_Description() {
		if (_Buty_Description == null) {
			return StringPool.BLANK;
		}
		else {
			return _Buty_Description;
		}
	}

	@Override
	public void setButy_Description(String Buty_Description) {
		_columnBitmask = -1L;

		if (_originalButy_Description == null) {
			_originalButy_Description = _Buty_Description;
		}

		_Buty_Description = Buty_Description;
	}

	public String getOriginalButy_Description() {
		return GetterUtil.getString(_originalButy_Description);
	}

	@JSON
	@Override
	public String getButy_Status() {
		if (_Buty_Status == null) {
			return StringPool.BLANK;
		}
		else {
			return _Buty_Status;
		}
	}

	@Override
	public void setButy_Status(String Buty_Status) {
		_Buty_Status = Buty_Status;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public BusinessType toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (BusinessType)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BusinessTypeImpl businessTypeImpl = new BusinessTypeImpl();

		businessTypeImpl.setButy_ID(getButy_ID());
		businessTypeImpl.setButy_Description(getButy_Description());
		businessTypeImpl.setButy_Status(getButy_Status());

		businessTypeImpl.resetOriginalValues();

		return businessTypeImpl;
	}

	@Override
	public int compareTo(BusinessType businessType) {
		int value = 0;

		value = getButy_Description()
					.compareTo(businessType.getButy_Description());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof BusinessType)) {
			return false;
		}

		BusinessType businessType = (BusinessType)obj;

		int primaryKey = businessType.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		BusinessTypeModelImpl businessTypeModelImpl = this;

		businessTypeModelImpl._originalButy_Description = businessTypeModelImpl._Buty_Description;

		businessTypeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<BusinessType> toCacheModel() {
		BusinessTypeCacheModel businessTypeCacheModel = new BusinessTypeCacheModel();

		businessTypeCacheModel.Buty_ID = getButy_ID();

		businessTypeCacheModel.Buty_Description = getButy_Description();

		String Buty_Description = businessTypeCacheModel.Buty_Description;

		if ((Buty_Description != null) && (Buty_Description.length() == 0)) {
			businessTypeCacheModel.Buty_Description = null;
		}

		businessTypeCacheModel.Buty_Status = getButy_Status();

		String Buty_Status = businessTypeCacheModel.Buty_Status;

		if ((Buty_Status != null) && (Buty_Status.length() == 0)) {
			businessTypeCacheModel.Buty_Status = null;
		}

		return businessTypeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{Buty_ID=");
		sb.append(getButy_ID());
		sb.append(", Buty_Description=");
		sb.append(getButy_Description());
		sb.append(", Buty_Status=");
		sb.append(getButy_Status());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("au.com.billingbuddy.porlet.services.model.BusinessType");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>Buty_ID</column-name><column-value><![CDATA[");
		sb.append(getButy_ID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Buty_Description</column-name><column-value><![CDATA[");
		sb.append(getButy_Description());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Buty_Status</column-name><column-value><![CDATA[");
		sb.append(getButy_Status());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = BusinessType.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			BusinessType.class
		};
	private int _Buty_ID;
	private String _Buty_Description;
	private String _originalButy_Description;
	private String _Buty_Status;
	private long _columnBitmask;
	private BusinessType _escapedModel;
}